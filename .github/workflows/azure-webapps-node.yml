# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '20.x'                # set this to the node version to use

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
#include <stdio.h>
#include <time.h>
#include <string.h>

int main() {
    time_t now;                 // 时间戳变量
    struct tm *current_time;    // 当前时间结构体指针
    struct tm future_time;      // 未来时间结构体
    int add_days;               // 要增加的天数

    // 获取当前时间戳并转换为本地时间
    time(&now);
    current_time = localtime(&now);

    // 显示当前日期
    printf("当前日期：%d年%d月%d日\n",
           current_time->tm_year + 1900,
           current_time->tm_mon + 1,
           current_time->tm_mday);

    // 中文星期数组
    const char *weekdays[] = {"星期日", "星期一", "星期二", 
                             "星期三", "星期四", "星期五", "星期六"};
    printf("今天是：%s\n", weekdays[current_time->tm_wday]);

    // 获取用户输入的天数
    printf("请输入要增加的天数：");
    if (scanf("%d", &add_days) != 1) {
        printf("输入错误，请重新运行程序！\n");
        return 1;
    }

    // 复制当前时间结构体
    memcpy(&future_time, current_time, sizeof(struct tm));
    
    // 修改天数并自动计算进位
    future_time.tm_mday += add_days;
    future_time.tm_isdst = -1;  // 自动处理夏令时

    // 通过mktime函数自动修正日期
    mktime(&future_time);

    // 显示计算结果
    printf("\n增加%d天后的日期：%d年%d月%d日，%s\n",
           add_days,
           future_time.tm_year + 1900,
           future_time.tm_mon + 1,
           future_time.tm_mday,
           weekdays[future_time.tm_wday]);

    return 0;
}
